import{AstroError as d}from"astro/errors";var a=e=>t=>t;function c(e){let t=[];if(e){for(let n of e)if(n){if(Array.isArray(n)){t.push(...c(n));continue}n instanceof Promise||t.push(n.name)}}return t}var l=a("astro:config:setup")(({config:e},{plugin:t})=>{if(!t||t instanceof Promise)return!1;let n=new Set(c(e?.vite?.plugins)),o=new Set;if(typeof t=="string"&&o.add(t),typeof t=="object")if(Array.isArray(t)){let i=new Set(c(t));for(let u of i)o.add(u)}else o.add(t.name);return[...o].some(i=>n.has(i))});var m=a("astro:config:setup")((e,{plugin:t,warnDuplicated:n=!0})=>{let{updateConfig:o,logger:i}=e;n&&l(e,{plugin:t})&&i.warn(`The Vite plugin "${t.name}" is already present in your Vite configuration, this plugin may not behave correctly.`),o({vite:{plugins:[t]}})});var P=e=>{let t=1;return`${e.replace(/-(\d+)$/,(n,o)=>(t=parseInt(o)+1,""))}-${t}`},y=e=>`\0${e}`,h=(e,t,n)=>{let o=Array.isArray(t)?t:Object.entries(t).map(([r,s])=>({id:r,content:s,context:void 0})),i={};for(let{id:r,context:s}of o)i[r]??=[],i[r]?.push(...s===void 0?["server","client"]:[s]);for(let[r,s]of Object.entries(i))if(s.length!==[...new Set(s)].length)throw new d(`Virtual import with id "${r}" has been registered several times with conflicting contexts.`);let u=Object.fromEntries(o.map(({id:r})=>{if(!n&&r.startsWith("astro:"))throw new d(`Virtual import name prefix can't be "astro:" (for "${r}") because it's reserved for Astro core.`);return[y(r),r]}));return{name:e,resolveId(r){if(o.find(s=>s.id===r))return y(r)},load(r,s){let p=u[r];if(p){let A=s?.ssr?"server":"client",g=o.find(f=>f.id===p&&(f.context===void 0||f.context===A));if(g)return g.content}}}},O=a("astro:config:setup")((e,{name:t,imports:n,__enableCorePowerDoNotUseOrYouWillBeFired:o=!1})=>{let i=`vite-plugin-${t}`;for(;l(e,{plugin:i});)i=P(i);m(e,{warnDuplicated:!1,plugin:h(i,n,o)})});export{O as addVirtualImports};
//# sourceMappingURL=add-virtual-imports.js.map