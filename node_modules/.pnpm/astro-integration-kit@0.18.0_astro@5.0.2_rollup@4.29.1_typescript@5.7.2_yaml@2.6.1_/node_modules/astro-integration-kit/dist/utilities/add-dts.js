import{mkdirSync as y,readFileSync as f,writeFileSync as p}from"node:fs";import{dirname as g,relative as d}from"node:path";import{fileURLToPath as i}from"node:url";import{parse as u,prettyPrint as m}from"recast";import T from"recast/parsers/typescript.js";var c=s=>r=>r;var k=({srcDir:s,logger:r,specifier:e})=>{let a=i(new URL("env.d.ts",s));e instanceof URL&&(e=i(e),e=d(i(s),e),e=e.replaceAll("\\","/"));let t=f(a,"utf8");if(t.includes(`/// <reference types='${e}' />`)||t.includes(`/// <reference types="${e}" />`))return;let o=t.includes("/// <reference types='astro/client' />")?{singleQuotes:!0,hasClient:!0}:t.includes('/// <reference types="astro/client" />')?{singleQuotes:!1,hasClient:!0}:t.includes('/// <reference path="../.astro/types.d.ts" />')?{singleQuotes:!1,hasClient:!1}:{singleQuotes:!0,hasClient:!1},n=`/// <reference ${o.hasClient?"types":"path"}=${o.singleQuotes?"'":'"'}${o.hasClient?"astro/client":"../.astro/types.d.ts"}${o.singleQuotes?"'":'"'} />`,l=t.replace(n,`${n}
/// <reference types=${o.singleQuotes?"'":'"'}${e}${o.singleQuotes?"'":'"'} />`);l!==t&&(p(a,l),r.info("Updated env.d.ts types"))},L=c("astro:config:setup")(({config:{root:s,srcDir:r},logger:e},{name:a,content:t})=>{let o=new URL(`.astro/${a}.d.ts`,s),n=i(o);k({srcDir:r,logger:e,specifier:o}),y(g(n),{recursive:!0}),p(n,m(u(t,{parser:T}),{tabWidth:4}).code,"utf-8")});export{L as addDts};
//# sourceMappingURL=add-dts.js.map